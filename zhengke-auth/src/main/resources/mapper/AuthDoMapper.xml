<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.xaidanwang.zhengke.auth.dao.AuthDoMapper">
  <resultMap id="BaseResultMap" type="com.github.xaidanwang.zhengke.auth.entity.AuthDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="phoneId" jdbcType="VARCHAR" property="phoneid" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="validityDay" jdbcType="INTEGER" property="validityday" />
    <result column="erpireDate" jdbcType="TIMESTAMP" property="erpiredate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, phoneId, token, updateTime, createTime, validityDay, erpireDate, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from zhengke_auth
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zhengke_auth
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.github.xaidanwang.zhengke.auth.entity.AuthDo">
    insert into zhengke_auth (id, phoneId, token, 
      updateTime, createTime, validityDay, 
      erpireDate, remark)
    values (#{id,jdbcType=BIGINT}, #{phoneid,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, #{validityday,jdbcType=INTEGER}, 
      #{erpiredate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.github.xaidanwang.zhengke.auth.entity.AuthDo">
    insert into zhengke_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phoneid != null">
        phoneId,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="validityday != null">
        validityDay,
      </if>
      <if test="erpiredate != null">
        erpireDate,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="phoneid != null">
        #{phoneid,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="validityday != null">
        #{validityday,jdbcType=INTEGER},
      </if>
      <if test="erpiredate != null">
        #{erpiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.xaidanwang.zhengke.auth.entity.AuthDo">
    update zhengke_auth
    <set>
      <if test="phoneid != null">
        phoneId = #{phoneid,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="validityday != null">
        validityDay = #{validityday,jdbcType=INTEGER},
      </if>
      <if test="erpiredate != null">
        erpireDate = #{erpiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.xaidanwang.zhengke.auth.entity.AuthDo">
    update zhengke_auth
    set phoneId = #{phoneid,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      validityDay = #{validityday,jdbcType=INTEGER},
      erpireDate = #{erpiredate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getAuthDoByToken" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from zhengke_auth
    where token = #{token,jdbcType=VARCHAR}
  </select>
  <select id="getAuthDoList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from zhengke_auth
    <where>
      <if test="phoneid != null and phoneid != '' ">
        and phoneId = #{phoneid,jdbcType=VARCHAR}
      </if>
      <if test="token != null and token != '' ">
        and  token = #{token,jdbcType=VARCHAR}
      </if>
      <if test="remark != null and remark != ''">
        and remark like "%"#{remark,jdbcType=VARCHAR}"%"
      </if>
    </where>
  </select>

  <select id="getAuthDo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from zhengke_auth
    where phoneId = #{phoneid,jdbcType=VARCHAR} and token = #{token,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByErpireDate" parameterType="string">
    DELETE  FROM `zhengke_auth` WHERE zhengke_auth.erpireDate <![CDATA[ <= ]]> NOW()
  </delete>


  <select id="getAuthDoByRemark" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from zhengke_auth
    where remark = #{remark,jdbcType=VARCHAR}

  </select>
</mapper>